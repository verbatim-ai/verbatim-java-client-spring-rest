/*
 * Verbatim AI API
 * **Welcome on Verbatim AI Platform!**  You'll find here advanced specs of our APIs. You can play with these APIs on our **[Swagger Playground](https://www.verbatim.cloud/api-docs/swagger)**. Feel free to check our **[Cookbook](https://www.verbatim.cloud/cookbook)** to get samples and how start easily.  _____
 *
 * The version of the OpenAPI document: v1
 * Contact: api@verbatim.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.verbatim.client.spring_rest.api;

import cloud.verbatim.client.spring_rest.models.Document;
import cloud.verbatim.client.spring_rest.models.DocumentResumable;
import cloud.verbatim.client.spring_rest.models.DocumentSign;
import cloud.verbatim.client.spring_rest.models.Error;
import cloud.verbatim.client.spring_rest.models.PageDocument;
import cloud.verbatim.client.spring_rest.models.WebPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.web.client.RestClientException;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentApi
 */
@Disabled
class DocumentApiTest {

    private final DocumentApi api = new DocumentApi();

    
    /**
     * List documents
     *
     * List documents available in your corpus
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void callListTest() {
        String corpusId = null;
        String pageToken = null;
        Integer pageSize = null;

        PageDocument response = api.callList(corpusId, pageToken, pageSize);

        // TODO: test validations
    }
    
    /**
     * Delete a document
     *
     * Delete a document from your corpus
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void delete2Test() {
        String corpusId = null;
        String documentId = null;

        api.delete2(corpusId, documentId);

        // TODO: test validations
    }
    
    /**
     * Get the download link
     *
     * Get a secured and signed urls to download file from a document ID
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void downloadTest() {
        String corpusId = null;
        String documentId = null;

        DocumentSign response = api.download(corpusId, documentId);

        // TODO: test validations
    }
    
    /**
     * Get a document
     *
     * Get detail info about a Document
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void getDocTest() {
        String corpusId = null;
        String documentId = null;

        Document response = api.getDoc(corpusId, documentId);

        // TODO: test validations
    }
    
    /**
     * Get a WebPage
     *
     * Get detail info about a Web page
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void getWebPageTest() {
        String corpusId = null;
        String documentId = null;

        WebPage response = api.getWebPage(corpusId, documentId);

        // TODO: test validations
    }
    
    /**
     * Preview a document image
     *
     * Get the preview url of one of the page of the document.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void previewDocTest() {
        String corpusId = null;
        String documentId = null;
        Integer pageIndex = null;
        String previewSize = null;

        DocumentSign response = api.previewDoc(corpusId, documentId, pageIndex, previewSize);

        // TODO: test validations
    }
    
    /**
     * Preview a web page
     *
     * Get the preview url of a web page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void previewWebTest() {
        String corpusId = null;
        String documentId = null;
        String previewSize = null;

        DocumentSign response = api.previewWeb(corpusId, documentId, previewSize);

        // TODO: test validations
    }
    
    /**
     * Upload a document
     *
     * Upload a new document in a corpus
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void uploadTest() {
        String corpusId = null;
        String filename = null;

        DocumentResumable response = api.upload(corpusId, filename);

        // TODO: test validations
    }
    
}
