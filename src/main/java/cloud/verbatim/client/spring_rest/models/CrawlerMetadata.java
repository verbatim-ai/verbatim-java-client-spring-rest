/*
 * Verbatim AI API
 * **Welcome on Verbatim AI Platform!**  You'll find here advanced specs of our APIs. You can play with these APIs on our **[Swagger Playground](https://www.verbatim.cloud/api-docs/swagger)**. Feel free to check our **[Cookbook](https://www.verbatim.cloud/cookbook)** to get samples and how start easily.  _____
 *
 * The version of the OpenAPI document: v1
 * Contact: api@verbatim.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.verbatim.client.spring_rest.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CrawlerMetadata
 */
@JsonPropertyOrder({
  CrawlerMetadata.JSON_PROPERTY_DISPLAY_NAME,
  CrawlerMetadata.JSON_PROPERTY_DESCRIPTION,
  CrawlerMetadata.JSON_PROPERTY_URL,
  CrawlerMetadata.JSON_PROPERTY_MAX_CRAWL_DEPTH,
  CrawlerMetadata.JSON_PROPERTY_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class CrawlerMetadata {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  @javax.annotation.Nonnull
  private String displayName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_URL = "url";
  @javax.annotation.Nonnull
  private String url;

  public static final String JSON_PROPERTY_MAX_CRAWL_DEPTH = "maxCrawlDepth";
  @javax.annotation.Nullable
  private Integer maxCrawlDepth;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  @javax.annotation.Nullable
  private Boolean enabled;

  public CrawlerMetadata() {
  }

  public CrawlerMetadata displayName(@javax.annotation.Nonnull String displayName) {
    
    this.displayName = displayName;
    return this;
  }

  /**
   * Display name of your Crawler
   * @return displayName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }

  public CrawlerMetadata description(@javax.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Description of your Crawler
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }

  public CrawlerMetadata url(@javax.annotation.Nonnull String url) {
    
    this.url = url;
    return this;
  }

  /**
   * Root url of the domain the crawl. Must start with http// or https://
   * @return url
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(@javax.annotation.Nonnull String url) {
    this.url = url;
  }

  public CrawlerMetadata maxCrawlDepth(@javax.annotation.Nullable Integer maxCrawlDepth) {
    
    this.maxCrawlDepth = maxCrawlDepth;
    return this;
  }

  /**
   * Maximum crawl depth
   * maximum: 5
   * @return maxCrawlDepth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_CRAWL_DEPTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxCrawlDepth() {
    return maxCrawlDepth;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CRAWL_DEPTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxCrawlDepth(@javax.annotation.Nullable Integer maxCrawlDepth) {
    this.maxCrawlDepth = maxCrawlDepth;
  }

  public CrawlerMetadata enabled(@javax.annotation.Nullable Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

  /**
   * Activation state of the crawler. True, the crawler is enable and have recurrent crawl schedule. False, the crawler is disable, no crawl until is back to an enable state.
   * @return enabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrawlerMetadata crawlerMetadata = (CrawlerMetadata) o;
    return Objects.equals(this.displayName, crawlerMetadata.displayName) &&
        Objects.equals(this.description, crawlerMetadata.description) &&
        Objects.equals(this.url, crawlerMetadata.url) &&
        Objects.equals(this.maxCrawlDepth, crawlerMetadata.maxCrawlDepth) &&
        Objects.equals(this.enabled, crawlerMetadata.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, description, url, maxCrawlDepth, enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrawlerMetadata {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    maxCrawlDepth: ").append(toIndentedString(maxCrawlDepth)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

