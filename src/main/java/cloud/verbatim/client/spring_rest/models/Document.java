/*
 * Verbatim AI API
 * **Welcome on Verbatim AI Platform!**  You'll find here advanced specs of our APIs. You can play with these APIs on our **[Swagger Playground](https://www.verbatim.cloud/api-docs/swagger)**. Feel free to check our **[Cookbook](https://www.verbatim.cloud/cookbook)** to get samples and how start easily.  _____
 *
 * The version of the OpenAPI document: v1
 * Contact: api@verbatim.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cloud.verbatim.client.spring_rest.models;

import java.util.Objects;
import java.util.Arrays;
import cloud.verbatim.client.spring_rest.models.DocumentPage;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Document
 */
@JsonPropertyOrder({
  Document.JSON_PROPERTY_ID,
  Document.JSON_PROPERTY_CREATED_AT,
  Document.JSON_PROPERTY_UPDATED_AT,
  Document.JSON_PROPERTY_CORPUS_ID,
  Document.JSON_PROPERTY_STATE,
  Document.JSON_PROPERTY_FILENAME,
  Document.JSON_PROPERTY_CONTENT_TYPE,
  Document.JSON_PROPERTY_SIZE,
  Document.JSON_PROPERTY_NB_PAGES,
  Document.JSON_PROPERTY_PAGES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Document {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @javax.annotation.Nullable
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_CORPUS_ID = "corpusId";
  @javax.annotation.Nullable
  private String corpusId;

  /**
   * Storage size, given in bytes
   */
  public enum StateEnum {
    UNKNOWN(String.valueOf("unknown")),
    
    PENDING(String.valueOf("pending")),
    
    PROCESSING(String.valueOf("processing")),
    
    READY(String.valueOf("ready")),
    
    ERROR(String.valueOf("error"));

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nullable
  private StateEnum state;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  @javax.annotation.Nullable
  private String filename;

  public static final String JSON_PROPERTY_CONTENT_TYPE = "contentType";
  @javax.annotation.Nullable
  private String contentType;

  public static final String JSON_PROPERTY_SIZE = "size";
  @javax.annotation.Nullable
  private Long size;

  public static final String JSON_PROPERTY_NB_PAGES = "nbPages";
  @javax.annotation.Nullable
  private Integer nbPages;

  public static final String JSON_PROPERTY_PAGES = "pages";
  @javax.annotation.Nullable
  private List<DocumentPage> pages = new ArrayList<>();

  public Document() {
  }

  public Document id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public Document createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Document updatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@javax.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Document corpusId(@javax.annotation.Nullable String corpusId) {
    
    this.corpusId = corpusId;
    return this;
  }

  /**
   * ID of the corpus where the document is stored
   * @return corpusId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORPUS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorpusId() {
    return corpusId;
  }


  @JsonProperty(JSON_PROPERTY_CORPUS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorpusId(@javax.annotation.Nullable String corpusId) {
    this.corpusId = corpusId;
  }

  public Document state(@javax.annotation.Nullable StateEnum state) {
    
    this.state = state;
    return this;
  }

  /**
   * Storage size, given in bytes
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@javax.annotation.Nullable StateEnum state) {
    this.state = state;
  }

  public Document filename(@javax.annotation.Nullable String filename) {
    
    this.filename = filename;
    return this;
  }

  /**
   * Filename of the document
   * @return filename
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilename() {
    return filename;
  }


  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilename(@javax.annotation.Nullable String filename) {
    this.filename = filename;
  }

  public Document contentType(@javax.annotation.Nullable String contentType) {
    
    this.contentType = contentType;
    return this;
  }

  /**
   * Content type of the document
   * @return contentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentType(@javax.annotation.Nullable String contentType) {
    this.contentType = contentType;
  }

  public Document size(@javax.annotation.Nullable Long size) {
    
    this.size = size;
    return this;
  }

  /**
   * Storage size, given in bytes
   * @return size
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(@javax.annotation.Nullable Long size) {
    this.size = size;
  }

  public Document nbPages(@javax.annotation.Nullable Integer nbPages) {
    
    this.nbPages = nbPages;
    return this;
  }

  /**
   * Total number of pages in the document
   * @return nbPages
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NB_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNbPages() {
    return nbPages;
  }


  @JsonProperty(JSON_PROPERTY_NB_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNbPages(@javax.annotation.Nullable Integer nbPages) {
    this.nbPages = nbPages;
  }

  public Document pages(@javax.annotation.Nullable List<DocumentPage> pages) {
    
    this.pages = pages;
    return this;
  }

  public Document addPagesItem(DocumentPage pagesItem) {
    if (this.pages == null) {
      this.pages = new ArrayList<>();
    }
    this.pages.add(pagesItem);
    return this;
  }

  /**
   * Info abouts pages of the document (title, previews, fileId of the preview)
   * @return pages
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DocumentPage> getPages() {
    return pages;
  }


  @JsonProperty(JSON_PROPERTY_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPages(@javax.annotation.Nullable List<DocumentPage> pages) {
    this.pages = pages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.id, document.id) &&
        Objects.equals(this.createdAt, document.createdAt) &&
        Objects.equals(this.updatedAt, document.updatedAt) &&
        Objects.equals(this.corpusId, document.corpusId) &&
        Objects.equals(this.state, document.state) &&
        Objects.equals(this.filename, document.filename) &&
        Objects.equals(this.contentType, document.contentType) &&
        Objects.equals(this.size, document.size) &&
        Objects.equals(this.nbPages, document.nbPages) &&
        Objects.equals(this.pages, document.pages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, updatedAt, corpusId, state, filename, contentType, size, nbPages, pages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    corpusId: ").append(toIndentedString(corpusId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    nbPages: ").append(toIndentedString(nbPages)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

