/*
 * Verbatim AI API
 * **Welcome on Verbatim AI Platform!**  You'll find here advanced specs of our APIs. You can play with these APIs on our **[Swagger Playground](https://www.verbatim.cloud/api-docs/swagger)**. Feel free to check our **[Cookbook](https://www.verbatim.cloud/cookbook)** to get samples and how start easily.  _____
 *
 * The version of the OpenAPI document: v1
 * Contact: api@verbatim.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.verbatim.client.spring_rest.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PromptPart
 */
@JsonPropertyOrder({
  PromptPart.JSON_PROPERTY_START,
  PromptPart.JSON_PROPERTY_END,
  PromptPart.JSON_PROPERTY_INDEX,
  PromptPart.JSON_PROPERTY_KIND
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PromptPart {
  public static final String JSON_PROPERTY_START = "start";
  @javax.annotation.Nullable
  private Integer start;

  public static final String JSON_PROPERTY_END = "end";
  @javax.annotation.Nullable
  private Integer end;

  public static final String JSON_PROPERTY_INDEX = "index";
  @javax.annotation.Nullable
  private Integer index;

  /**
   * Kind of attachment. For web, you&#39;ll found the attachment in web[index]. For document, you&#39;ll found the attachment in document[index]
   */
  public enum KindEnum {
    DOC(String.valueOf("doc")),
    
    WEB(String.valueOf("web"));

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static KindEnum fromValue(String value) {
      for (KindEnum b : KindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_KIND = "kind";
  @javax.annotation.Nullable
  private KindEnum kind;

  public PromptPart() {
  }

  public PromptPart start(@javax.annotation.Nullable Integer start) {
    
    this.start = start;
    return this;
  }

  /**
   * define the beginning of the substring in the answer which is attached to a document. Document is defined by the attachmentIndex
   * @return start
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStart(@javax.annotation.Nullable Integer start) {
    this.start = start;
  }

  public PromptPart end(@javax.annotation.Nullable Integer end) {
    
    this.end = end;
    return this;
  }

  /**
   * define the end of the substring in the answer which is attached to a document.Document is defined by the attachmentIndex
   * @return end
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnd(@javax.annotation.Nullable Integer end) {
    this.end = end;
  }

  public PromptPart index(@javax.annotation.Nullable Integer index) {
    
    this.index = index;
    return this;
  }

  /**
   * Index of the attachment related to this substring
   * @return index
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndex(@javax.annotation.Nullable Integer index) {
    this.index = index;
  }

  public PromptPart kind(@javax.annotation.Nullable KindEnum kind) {
    
    this.kind = kind;
    return this;
  }

  /**
   * Kind of attachment. For web, you&#39;ll found the attachment in web[index]. For document, you&#39;ll found the attachment in document[index]
   * @return kind
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KindEnum getKind() {
    return kind;
  }


  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKind(@javax.annotation.Nullable KindEnum kind) {
    this.kind = kind;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptPart promptPart = (PromptPart) o;
    return Objects.equals(this.start, promptPart.start) &&
        Objects.equals(this.end, promptPart.end) &&
        Objects.equals(this.index, promptPart.index) &&
        Objects.equals(this.kind, promptPart.kind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, end, index, kind);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptPart {\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

