/*
 * Verbatim AI API
 * **Welcome on Verbatim AI Platform!**  You'll find here advanced specs of our APIs. You can play with these APIs on our **[Swagger Playground](https://www.verbatim.cloud/api-docs/swagger)**. Feel free to check our **[Cookbook](https://www.verbatim.cloud/cookbook)** to get samples and how start easily.  _____
 *
 * The version of the OpenAPI document: v1
 * Contact: api@verbatim.cloud
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.verbatim.client.spring_rest.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TokenInfo
 */
@JsonPropertyOrder({
  TokenInfo.JSON_PROPERTY_ISSUER,
  TokenInfo.JSON_PROPERTY_ISSUED_AT,
  TokenInfo.JSON_PROPERTY_EXPIRES_AT,
  TokenInfo.JSON_PROPERTY_ORGANIZATION_ID,
  TokenInfo.JSON_PROPERTY_USER_ID,
  TokenInfo.JSON_PROPERTY_KEY_ID,
  TokenInfo.JSON_PROPERTY_EMAIL,
  TokenInfo.JSON_PROPERTY_NAME,
  TokenInfo.JSON_PROPERTY_EMAIL_VERIFIED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class TokenInfo {
  public static final String JSON_PROPERTY_ISSUER = "issuer";
  @javax.annotation.Nullable
  private String issuer;

  public static final String JSON_PROPERTY_ISSUED_AT = "issuedAt";
  @javax.annotation.Nullable
  private OffsetDateTime issuedAt;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expiresAt";
  @javax.annotation.Nullable
  private OffsetDateTime expiresAt;

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organizationId";
  @javax.annotation.Nullable
  private String organizationId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private String userId;

  public static final String JSON_PROPERTY_KEY_ID = "keyId";
  @javax.annotation.Nullable
  private String keyId;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nullable
  private String email;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_EMAIL_VERIFIED = "emailVerified";
  @javax.annotation.Nullable
  private Boolean emailVerified;

  public TokenInfo() {
  }

  public TokenInfo issuer(@javax.annotation.Nullable String issuer) {
    
    this.issuer = issuer;
    return this;
  }

  /**
   * Issuer of the token
   * @return issuer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(@javax.annotation.Nullable String issuer) {
    this.issuer = issuer;
  }

  public TokenInfo issuedAt(@javax.annotation.Nullable OffsetDateTime issuedAt) {
    
    this.issuedAt = issuedAt;
    return this;
  }

  /**
   * When this token has been produced
   * @return issuedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getIssuedAt() {
    return issuedAt;
  }


  @JsonProperty(JSON_PROPERTY_ISSUED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuedAt(@javax.annotation.Nullable OffsetDateTime issuedAt) {
    this.issuedAt = issuedAt;
  }

  public TokenInfo expiresAt(@javax.annotation.Nullable OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

  /**
   * Expiration date of this token
   * @return expiresAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiresAt(@javax.annotation.Nullable OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }

  public TokenInfo organizationId(@javax.annotation.Nullable String organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

  /**
   * ID of the organization who owned the authenticate user
   * @return organizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizationId(@javax.annotation.Nullable String organizationId) {
    this.organizationId = organizationId;
  }

  public TokenInfo userId(@javax.annotation.Nullable String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * UID of the user, authenticated when the current token
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }

  public TokenInfo keyId(@javax.annotation.Nullable String keyId) {
    
    this.keyId = keyId;
    return this;
  }

  /**
   * ID of the key used to sign he token. Only for Verbatim issuer
   * @return keyId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyId() {
    return keyId;
  }


  @JsonProperty(JSON_PROPERTY_KEY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyId(@javax.annotation.Nullable String keyId) {
    this.keyId = keyId;
  }

  public TokenInfo email(@javax.annotation.Nullable String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Email of the authenticate user
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }

  public TokenInfo name(@javax.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Name of the authenticate user
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }

  public TokenInfo emailVerified(@javax.annotation.Nullable Boolean emailVerified) {
    
    this.emailVerified = emailVerified;
    return this;
  }

  /**
   * True when email is verified
   * @return emailVerified
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEmailVerified() {
    return emailVerified;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailVerified(@javax.annotation.Nullable Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenInfo tokenInfo = (TokenInfo) o;
    return Objects.equals(this.issuer, tokenInfo.issuer) &&
        Objects.equals(this.issuedAt, tokenInfo.issuedAt) &&
        Objects.equals(this.expiresAt, tokenInfo.expiresAt) &&
        Objects.equals(this.organizationId, tokenInfo.organizationId) &&
        Objects.equals(this.userId, tokenInfo.userId) &&
        Objects.equals(this.keyId, tokenInfo.keyId) &&
        Objects.equals(this.email, tokenInfo.email) &&
        Objects.equals(this.name, tokenInfo.name) &&
        Objects.equals(this.emailVerified, tokenInfo.emailVerified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issuer, issuedAt, expiresAt, organizationId, userId, keyId, email, name, emailVerified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenInfo {\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    issuedAt: ").append(toIndentedString(issuedAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    keyId: ").append(toIndentedString(keyId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

